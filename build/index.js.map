{"version":3,"file":"index.js","mappings":"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","sources":["webpack://enable-decorative-images/external window \"ReactJSXRuntime\"","webpack://enable-decorative-images/external window [\"wp\",\"blockEditor\"]","webpack://enable-decorative-images/external window [\"wp\",\"components\"]","webpack://enable-decorative-images/external window [\"wp\",\"element\"]","webpack://enable-decorative-images/external window [\"wp\",\"hooks\"]","webpack://enable-decorative-images/external window [\"wp\",\"i18n\"]","webpack://enable-decorative-images/webpack/bootstrap","webpack://enable-decorative-images/webpack/runtime/compat get default export","webpack://enable-decorative-images/webpack/runtime/define property getters","webpack://enable-decorative-images/webpack/runtime/hasOwnProperty shorthand","webpack://enable-decorative-images/webpack/runtime/make namespace object","webpack://enable-decorative-images/./src/index.js"],"sourcesContent":["module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { addFilter } from '@wordpress/hooks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tPanelRow,\n\tToggleControl,\n\tExternalLink,\n} from '@wordpress/components';\nimport { Children, cloneElement, isValidElement } from '@wordpress/element';\n\n/**\n * Adds a custom 'isDecorative' attribute to all Image blocks.\n *\n * This attribute is used to indicate whether an image is decorative,\n * allowing developers to specify if an image should be ignored by\n * assistive technologies. The attribute is a boolean with a default value of 'false'.\n *\n * @param {Object} settings The block settings for the registered block type.\n * @return {Object}         The modified block settings with the added attribute.\n */\nfunction addIsDecorativeAttribute( settings ) {\n\n\t// Only add attribute to Image blocks.\n\tif ( settings.name === 'core/image' ) {\n\t\tsettings.attributes = {\n\t\t\t...settings.attributes,\n\t\t\tisDecorative: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t};\n\t}\n\n\treturn settings;\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'enable-decorative-images/add-is-decorative-attribute',\n\taddIsDecorativeAttribute\n);\n\n/**\n * Filter the BlockEdit object and add the \"Is Decorative\" toggle to Image blocks.\n *\n * @since 0.1.0\n * @param {Object} BlockEdit\n */\nfunction addImageInspectorControls( BlockEdit ) {\n\treturn ( props ) => {\n\t\tconst { name, attributes, setAttributes } = props;\n\n\t\t// Early return if the block is not the Image block.\n\t\tif ( name !== 'core/image' ) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n\t\tconst { alt, isDecorative } = attributes;\n\n\t\tconst helpText = (\n\t\t\t<>\n\t\t\t\t{ __(\n\t\t\t\t\t\"Decorative images don't add information to the content of a page. Enabling removes alternative text and sets the image's role to presentation. \",\n\t\t\t\t\t'enable-decorative-images'\n\t\t\t\t) }\n\t\t\t\t<ExternalLink\n\t\t\t\t\thref={\n\t\t\t\t\t\t'https://www.w3.org/WAI/tutorials/images/decorative/'\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'Learn more.',\n\t\t\t\t\t\t'enable-decorative-images'\n\t\t\t\t\t) }\n\t\t\t\t</ExternalLink>\n\t\t\t</>\n\t\t);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __(\n\t\t\t\t\t\t\t'Accessibility',\n\t\t\t\t\t\t\t'enable-decorative-images'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Image is decorative',\n\t\t\t\t\t\t\t\t\t'enable-decorative-images'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tchecked={ isDecorative }\n\t\t\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\tisDecorative: ! isDecorative,\n\t\t\t\t\t\t\t\t\t\talt: ! isDecorative ? '' : alt,\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\thelp={ helpText }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t</>\n\t\t);\n\t};\n}\n\naddFilter(\n\t'editor.BlockEdit',\n\t'enable-decorative-images/add-image-inspector-controls',\n\taddImageInspectorControls\n);\n\n/**\n * Adds the role attribute to img elements in the block's Save function for\n * accessibility purposes.\n *\n * This function iterates over the children of a given element and adds the\n * role=\"presentation\" attribute to img elements if they are marked as decorative.\n *\n * @param {Object} element    The React element to be modified.\n * @param {Object} blockType  The type of the block.\n * @param {Object} attributes The block attributes.\n * @return {Object} The modified React element with updated img roles.\n */\nfunction addAccessibilityRoleToImages( element, blockType, attributes ) {\n\tconst { name } = blockType;\n\tconst { isDecorative } = attributes;\n\tconst elementChildren = element?.props?.children;\n\n\tconst updateChildrenWithRole = ( children ) => {\n\t\treturn Children.map( children, ( child ) => {\n\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\treturn child;\n\t\t\t}\n\n\t\t\t// Check if the child is of type 'img'. The Image block only has one img child.\n\t\t\tif ( child.type === 'img' ) {\n\t\t\t\treturn cloneElement( child, { role: 'presentation' } );\n\t\t\t}\n\n\t\t\t// If the current child has children of its own, recurse over them.\n\t\t\tif ( child.props.children ) {\n\t\t\t\treturn cloneElement( child, {\n\t\t\t\t\tchildren: updateChildrenWithRole( child.props.children ),\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn child;\n\t\t} );\n\t};\n\n\t// Apply the correct role to child 'img' elements if the block is a decorative Image block.\n\tif ( 'core/image' === name && isDecorative &&  elementChildren ) {\n\t\treturn cloneElement( element, {\n\t\t\tchildren: updateChildrenWithRole( elementChildren ),\n\t\t} );\n\t}\n\n\treturn element;\n}\n\naddFilter(\n\t'blocks.getSaveElement',\n\t'enable-decorative-images/add-accessibility-role-to-images',\n\taddAccessibilityRoleToImages\n);\n\n/**\n * Note: Note required, for demonstration purposes only.\n * \n * Adds the role=\"presentation\" attribute to Image blocks marked as decorative.\n *\n * @param {Object} props       The current properties of the block's root element.\n * @param {Object} blockType   The block type definition object.\n * @param {Object} attributes  The block's attributes.\n * @return {Object}            The modified properties with the `role` attribute added, or the original properties if conditions are not met.\n */\nfunction addAccessibilityRoleToImageBlocks( props, blockType, attributes ) {\n\tconst { name } = blockType;\n\tconst { isDecorative } = attributes;\n\n\tif ( 'core/image' === name && isDecorative ) {\n\t\treturn {\n\t\t\t...props,\n\t\t\trole: 'presentation',\n\t\t};\n\t}\n\n\treturn props;\n}\n\n// addFilter(\n// \t'blocks.getSaveContent.extraProps',\n// \t'example/add-accessibility-role-to-image-blocks',\n// \taddAccessibilityRoleToImageBlocks\n// );"],"names":["__","addFilter","InspectorControls","PanelBody","PanelRow","ToggleControl","ExternalLink","Children","cloneElement","isValidElement","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","addIsDecorativeAttribute","settings","name","attributes","isDecorative","type","default","addImageInspectorControls","BlockEdit","props","setAttributes","alt","helpText","children","href","title","label","checked","onChange","help","addAccessibilityRoleToImages","element","blockType","elementChildren","updateChildrenWithRole","map","child","role","addAccessibilityRoleToImageBlocks"],"sourceRoot":""}